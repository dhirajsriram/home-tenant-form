// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App> Renders without exploding 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Suspense
    fallback={<div />}
  >
    <MemoryRouter
      initialEntries={
        Array [
          "/",
        ]
      }
      keyLength={0}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <App>
          <Suspense
            fallback={<Loader />}
          >
            <ThemeProvider
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "rgb(46, 46, 46)",
                      "light": "rgb(103, 103, 103)",
                      "main": "#424242",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "rgb(46, 46, 46)",
                      "light": "rgb(103, 103, 103)",
                      "main": "#424242",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                  Symbol(mui.nested): false,
                }
              }
            >
              <Trans>
                <div
                  className="main-container"
                  key="0"
                >
                  <withRouter()
                    key="0"
                  >
                    <Component
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "canGo": [Function],
                          "createHref": [Function],
                          "entries": Array [
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                          ],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "index": 0,
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                    >
                      <div
                        className="menu-container"
                      >
                        <WithStyles(ForwardRef(AppBar))
                          className="menu-bar"
                          color="inherit"
                          position="static"
                        >
                          <ForwardRef(AppBar)
                            className="menu-bar"
                            classes={
                              Object {
                                "colorDefault": "MuiAppBar-colorDefault",
                                "colorInherit": "MuiAppBar-colorInherit",
                                "colorPrimary": "MuiAppBar-colorPrimary",
                                "colorSecondary": "MuiAppBar-colorSecondary",
                                "colorTransparent": "MuiAppBar-colorTransparent",
                                "positionAbsolute": "MuiAppBar-positionAbsolute",
                                "positionFixed": "MuiAppBar-positionFixed",
                                "positionRelative": "MuiAppBar-positionRelative",
                                "positionStatic": "MuiAppBar-positionStatic",
                                "positionSticky": "MuiAppBar-positionSticky",
                                "root": "MuiAppBar-root",
                              }
                            }
                            color="inherit"
                            position="static"
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorInherit menu-bar"
                              component="header"
                              elevation={4}
                              square={true}
                            >
                              <ForwardRef(Paper)
                                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorInherit menu-bar"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                component="header"
                                elevation={4}
                                square={true}
                              >
                                <header
                                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorInherit menu-bar MuiPaper-elevation4"
                                >
                                  <WithStyles(ForwardRef(Toolbar))
                                    className="menu-toolbar"
                                  >
                                    <ForwardRef(Toolbar)
                                      className="menu-toolbar"
                                      classes={
                                        Object {
                                          "dense": "MuiToolbar-dense",
                                          "gutters": "MuiToolbar-gutters",
                                          "regular": "MuiToolbar-regular",
                                          "root": "MuiToolbar-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiToolbar-root MuiToolbar-regular menu-toolbar MuiToolbar-gutters"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="menu-button"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(IconButton)
                                            className="menu-button"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root menu-button"
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root menu-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                disabled={false}
                                                focusRipple={true}
                                                onClick={[Function]}
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiIconButton-root menu-button"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <img
                                                      alt="Home HT"
                                                      className="menu-icon"
                                                      src="logo.png"
                                                    />
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                        <div
                                          className="menu-content"
                                        >
                                          <WithStyles(ForwardRef(Button))
                                            aria-controls="language-menu"
                                            aria-haspopup="true"
                                            className="language-button"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(Button)
                                              aria-controls="language-menu"
                                              aria-haspopup="true"
                                              className="language-button"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-controls="language-menu"
                                                aria-haspopup="true"
                                                className="MuiButton-root MuiButton-text language-button"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-controls="language-menu"
                                                  aria-haspopup="true"
                                                  className="MuiButton-root MuiButton-text language-button"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <button
                                                    aria-controls="language-menu"
                                                    aria-haspopup="true"
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text language-button"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label"
                                                    >
                                                      <img
                                                        alt="EN"
                                                        className="language-flag"
                                                        src={
                                                          Object {
                                                            "ReactComponent": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                            "__esModule": true,
                                                            "default": "en-flag.svg",
                                                          }
                                                        }
                                                      />
                                                      <span
                                                        className="language"
                                                      >
                                                        EN
                                                      </span>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                          <WithStyles(ForwardRef(Menu))
                                            anchorEl={null}
                                            id="language-menu"
                                            keepMounted={true}
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <ForwardRef(Menu)
                                              anchorEl={null}
                                              classes={
                                                Object {
                                                  "list": "MuiMenu-list",
                                                  "paper": "MuiMenu-paper",
                                                }
                                              }
                                              id="language-menu"
                                              keepMounted={true}
                                              onClose={[Function]}
                                              open={false}
                                            >
                                              <WithStyles(ForwardRef(Popover))
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                  }
                                                }
                                                anchorEl={null}
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                getContentAnchorEl={[Function]}
                                                id="language-menu"
                                                keepMounted={true}
                                                onClose={[Function]}
                                                onEntering={[Function]}
                                                open={false}
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "left",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <ForwardRef(Popover)
                                                  PaperProps={
                                                    Object {
                                                      "classes": Object {
                                                        "root": "MuiMenu-paper",
                                                      },
                                                    }
                                                  }
                                                  anchorEl={null}
                                                  anchorOrigin={
                                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                                                  }
                                                  classes={
                                                    Object {
                                                      "paper": "MuiPopover-paper",
                                                      "root": "MuiPopover-root",
                                                    }
                                                  }
                                                  getContentAnchorEl={[Function]}
                                                  id="language-menu"
                                                  keepMounted={true}
                                                  onClose={[Function]}
                                                  onEntering={[Function]}
                                                  open={false}
                                                  transformOrigin={
                                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                                                  }
                                                  transitionDuration="auto"
                                                >
                                                  <ForwardRef(Modal)
                                                    BackdropProps={
                                                      Object {
                                                        "invisible": true,
                                                      }
                                                    }
                                                    className="MuiPopover-root"
                                                    id="language-menu"
                                                    keepMounted={true}
                                                    onClose={[Function]}
                                                    open={false}
                                                  >
                                                    <ForwardRef(Portal)
                                                      disablePortal={false}
                                                    >
                                                      <Portal
                                                        containerInfo={
                                                          <body>
                                                            <div
                                                              aria-hidden="true"
                                                              class="MuiPopover-root"
                                                              id="language-menu"
                                                              role="presentation"
                                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                            >
                                                              <div
                                                                data-test="sentinelStart"
                                                                tabindex="0"
                                                              />
                                                              <div
                                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                                style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                                tabindex="-1"
                                                              >
                                                                <ul
                                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                                  role="menu"
                                                                  tabindex="-1"
                                                                >
                                                                  <li
                                                                    aria-disabled="false"
                                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    role="menuitem"
                                                                    tabindex="0"
                                                                  >
                                                                    <img
                                                                      alt="EN"
                                                                      class="language-flag"
                                                                      src="[object Object]"
                                                                    />
                                                                    EN
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </li>
                                                                  <li
                                                                    aria-disabled="false"
                                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    role="menuitem"
                                                                    tabindex="-1"
                                                                  >
                                                                    <img
                                                                      alt="DE"
                                                                      class="language-flag"
                                                                      src="[object Object]"
                                                                    />
                                                                    DE
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </li>
                                                                </ul>
                                                              </div>
                                                              <div
                                                                data-test="sentinelEnd"
                                                                tabindex="0"
                                                              />
                                                            </div>
                                                            <div
                                                              aria-hidden="true"
                                                              class="MuiPopover-root"
                                                              id="language-menu"
                                                              role="presentation"
                                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                            >
                                                              <div
                                                                data-test="sentinelStart"
                                                                tabindex="0"
                                                              />
                                                              <div
                                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                                style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                                tabindex="-1"
                                                              >
                                                                <ul
                                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                                  role="menu"
                                                                  tabindex="-1"
                                                                >
                                                                  <li
                                                                    aria-disabled="false"
                                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    role="menuitem"
                                                                    tabindex="0"
                                                                  >
                                                                    <img
                                                                      alt="EN"
                                                                      class="language-flag"
                                                                      src="[object Object]"
                                                                    />
                                                                    EN
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </li>
                                                                  <li
                                                                    aria-disabled="false"
                                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    role="menuitem"
                                                                    tabindex="-1"
                                                                  >
                                                                    <img
                                                                      alt="DE"
                                                                      class="language-flag"
                                                                      src="[object Object]"
                                                                    />
                                                                    DE
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </li>
                                                                </ul>
                                                              </div>
                                                              <div
                                                                data-test="sentinelEnd"
                                                                tabindex="0"
                                                              />
                                                            </div>
                                                          </body>
                                                        }
                                                      >
                                                        <div
                                                          className="MuiPopover-root"
                                                          id="language-menu"
                                                          onKeyDown={[Function]}
                                                          role="presentation"
                                                          style={
                                                            Object {
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                              "visibility": "hidden",
                                                              "zIndex": 1300,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(SimpleBackdrop)
                                                            invisible={true}
                                                            onClick={[Function]}
                                                            open={false}
                                                          />
                                                          <TrapFocus
                                                            disableAutoFocus={false}
                                                            disableEnforceFocus={false}
                                                            disableRestoreFocus={false}
                                                            getDoc={[Function]}
                                                            isEnabled={[Function]}
                                                            open={false}
                                                          >
                                                            <div
                                                              data-test="sentinelStart"
                                                              tabIndex={0}
                                                            />
                                                            <ForwardRef(Grow)
                                                              appear={true}
                                                              in={false}
                                                              onEnter={[Function]}
                                                              onEntering={[Function]}
                                                              onExited={[Function]}
                                                              tabIndex="-1"
                                                              timeout="auto"
                                                            >
                                                              <Transition
                                                                addEndListener={[Function]}
                                                                appear={true}
                                                                enter={true}
                                                                exit={true}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onEnter={[Function]}
                                                                onEntered={[Function]}
                                                                onEntering={[Function]}
                                                                onExit={[Function]}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                tabIndex="-1"
                                                                timeout={null}
                                                                unmountOnExit={false}
                                                              >
                                                                <WithStyles(ForwardRef(Paper))
                                                                  className="MuiPopover-paper"
                                                                  classes={
                                                                    Object {
                                                                      "root": "MuiMenu-paper",
                                                                    }
                                                                  }
                                                                  elevation={8}
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                      "transform": "scale(0.75, 0.5625)",
                                                                      "visibility": "hidden",
                                                                    }
                                                                  }
                                                                  tabIndex="-1"
                                                                >
                                                                  <ForwardRef(Paper)
                                                                    className="MuiPopover-paper"
                                                                    classes={
                                                                      Object {
                                                                        "elevation0": "MuiPaper-elevation0",
                                                                        "elevation1": "MuiPaper-elevation1",
                                                                        "elevation10": "MuiPaper-elevation10",
                                                                        "elevation11": "MuiPaper-elevation11",
                                                                        "elevation12": "MuiPaper-elevation12",
                                                                        "elevation13": "MuiPaper-elevation13",
                                                                        "elevation14": "MuiPaper-elevation14",
                                                                        "elevation15": "MuiPaper-elevation15",
                                                                        "elevation16": "MuiPaper-elevation16",
                                                                        "elevation17": "MuiPaper-elevation17",
                                                                        "elevation18": "MuiPaper-elevation18",
                                                                        "elevation19": "MuiPaper-elevation19",
                                                                        "elevation2": "MuiPaper-elevation2",
                                                                        "elevation20": "MuiPaper-elevation20",
                                                                        "elevation21": "MuiPaper-elevation21",
                                                                        "elevation22": "MuiPaper-elevation22",
                                                                        "elevation23": "MuiPaper-elevation23",
                                                                        "elevation24": "MuiPaper-elevation24",
                                                                        "elevation3": "MuiPaper-elevation3",
                                                                        "elevation4": "MuiPaper-elevation4",
                                                                        "elevation5": "MuiPaper-elevation5",
                                                                        "elevation6": "MuiPaper-elevation6",
                                                                        "elevation7": "MuiPaper-elevation7",
                                                                        "elevation8": "MuiPaper-elevation8",
                                                                        "elevation9": "MuiPaper-elevation9",
                                                                        "outlined": "MuiPaper-outlined",
                                                                        "root": "MuiPaper-root MuiMenu-paper",
                                                                        "rounded": "MuiPaper-rounded",
                                                                      }
                                                                    }
                                                                    elevation={8}
                                                                    style={
                                                                      Object {
                                                                        "opacity": 0,
                                                                        "transform": "scale(0.75, 0.5625)",
                                                                        "visibility": "hidden",
                                                                      }
                                                                    }
                                                                    tabIndex="-1"
                                                                  >
                                                                    <div
                                                                      className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                          "transform": "scale(0.75, 0.5625)",
                                                                          "visibility": "hidden",
                                                                        }
                                                                      }
                                                                      tabIndex="-1"
                                                                    >
                                                                      <ForwardRef(MenuList)
                                                                        actions={
                                                                          Object {
                                                                            "current": Object {
                                                                              "adjustStyleForScrollbar": [Function],
                                                                            },
                                                                          }
                                                                        }
                                                                        autoFocus={false}
                                                                        autoFocusItem={false}
                                                                        className="MuiMenu-list"
                                                                        onKeyDown={[Function]}
                                                                        variant="selectedMenu"
                                                                      >
                                                                        <WithStyles(ForwardRef(List))
                                                                          className="MuiMenu-list"
                                                                          onKeyDown={[Function]}
                                                                          role="menu"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(List)
                                                                            className="MuiMenu-list"
                                                                            classes={
                                                                              Object {
                                                                                "dense": "MuiList-dense",
                                                                                "padding": "MuiList-padding",
                                                                                "root": "MuiList-root",
                                                                                "subheader": "MuiList-subheader",
                                                                              }
                                                                            }
                                                                            onKeyDown={[Function]}
                                                                            role="menu"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ul
                                                                              className="MuiList-root MuiMenu-list MuiList-padding"
                                                                              onKeyDown={[Function]}
                                                                              role="menu"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                key=".$.0"
                                                                                onClick={[Function]}
                                                                                tabIndex={0}
                                                                              >
                                                                                <ForwardRef(MenuItem)
                                                                                  classes={
                                                                                    Object {
                                                                                      "dense": "MuiMenuItem-dense",
                                                                                      "gutters": "MuiMenuItem-gutters",
                                                                                      "root": "MuiMenuItem-root",
                                                                                      "selected": "Mui-selected",
                                                                                    }
                                                                                  }
                                                                                  onClick={[Function]}
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ListItem))
                                                                                    button={true}
                                                                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                    classes={
                                                                                      Object {
                                                                                        "dense": "MuiMenuItem-dense",
                                                                                      }
                                                                                    }
                                                                                    component="li"
                                                                                    disableGutters={false}
                                                                                    onClick={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    <ForwardRef(ListItem)
                                                                                      button={true}
                                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                          "button": "MuiListItem-button",
                                                                                          "container": "MuiListItem-container",
                                                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "divider": "MuiListItem-divider",
                                                                                          "focusVisible": "Mui-focusVisible",
                                                                                          "gutters": "MuiListItem-gutters",
                                                                                          "root": "MuiListItem-root",
                                                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                                                          "selected": "Mui-selected",
                                                                                        }
                                                                                      }
                                                                                      component="li"
                                                                                      disableGutters={false}
                                                                                      onClick={[Function]}
                                                                                      role="menuitem"
                                                                                      tabIndex={0}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                        component="li"
                                                                                        disabled={false}
                                                                                        focusVisibleClassName="Mui-focusVisible"
                                                                                        onClick={[Function]}
                                                                                        role="menuitem"
                                                                                        tabIndex={0}
                                                                                      >
                                                                                        <ForwardRef(ButtonBase)
                                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                          classes={
                                                                                            Object {
                                                                                              "disabled": "Mui-disabled",
                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                              "root": "MuiButtonBase-root",
                                                                                            }
                                                                                          }
                                                                                          component="li"
                                                                                          disabled={false}
                                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                                          onClick={[Function]}
                                                                                          role="menuitem"
                                                                                          tabIndex={0}
                                                                                        >
                                                                                          <li
                                                                                            aria-disabled={false}
                                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                            onBlur={[Function]}
                                                                                            onClick={[Function]}
                                                                                            onDragLeave={[Function]}
                                                                                            onFocus={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onKeyUp={[Function]}
                                                                                            onMouseDown={[Function]}
                                                                                            onMouseLeave={[Function]}
                                                                                            onMouseUp={[Function]}
                                                                                            onTouchEnd={[Function]}
                                                                                            onTouchMove={[Function]}
                                                                                            onTouchStart={[Function]}
                                                                                            role="menuitem"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <img
                                                                                              alt="EN"
                                                                                              className="language-flag"
                                                                                              key=".0"
                                                                                              src={
                                                                                                Object {
                                                                                                  "ReactComponent": Object {
                                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                                    "render": [Function],
                                                                                                  },
                                                                                                  "__esModule": true,
                                                                                                  "default": "en-flag.svg",
                                                                                                }
                                                                                              }
                                                                                            />
                                                                                            EN
                                                                                            <WithStyles(memo)
                                                                                              center={false}
                                                                                            >
                                                                                              <ForwardRef(TouchRipple)
                                                                                                center={false}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                  }
                                                                                                }
                                                                                              >
                                                                                                <span
                                                                                                  className="MuiTouchRipple-root"
                                                                                                >
                                                                                                  <TransitionGroup
                                                                                                    childFactory={[Function]}
                                                                                                    component={null}
                                                                                                    exit={true}
                                                                                                  />
                                                                                                </span>
                                                                                              </ForwardRef(TouchRipple)>
                                                                                            </WithStyles(memo)>
                                                                                          </li>
                                                                                        </ForwardRef(ButtonBase)>
                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                    </ForwardRef(ListItem)>
                                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                                </ForwardRef(MenuItem)>
                                                                              </WithStyles(ForwardRef(MenuItem))>
                                                                              <WithStyles(ForwardRef(MenuItem))
                                                                                key=".$.1"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(MenuItem)
                                                                                  classes={
                                                                                    Object {
                                                                                      "dense": "MuiMenuItem-dense",
                                                                                      "gutters": "MuiMenuItem-gutters",
                                                                                      "root": "MuiMenuItem-root",
                                                                                      "selected": "Mui-selected",
                                                                                    }
                                                                                  }
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ListItem))
                                                                                    button={true}
                                                                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                    classes={
                                                                                      Object {
                                                                                        "dense": "MuiMenuItem-dense",
                                                                                      }
                                                                                    }
                                                                                    component="li"
                                                                                    disableGutters={false}
                                                                                    onClick={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={-1}
                                                                                  >
                                                                                    <ForwardRef(ListItem)
                                                                                      button={true}
                                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                          "button": "MuiListItem-button",
                                                                                          "container": "MuiListItem-container",
                                                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "divider": "MuiListItem-divider",
                                                                                          "focusVisible": "Mui-focusVisible",
                                                                                          "gutters": "MuiListItem-gutters",
                                                                                          "root": "MuiListItem-root",
                                                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                                                          "selected": "Mui-selected",
                                                                                        }
                                                                                      }
                                                                                      component="li"
                                                                                      disableGutters={false}
                                                                                      onClick={[Function]}
                                                                                      role="menuitem"
                                                                                      tabIndex={-1}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                        component="li"
                                                                                        disabled={false}
                                                                                        focusVisibleClassName="Mui-focusVisible"
                                                                                        onClick={[Function]}
                                                                                        role="menuitem"
                                                                                        tabIndex={-1}
                                                                                      >
                                                                                        <ForwardRef(ButtonBase)
                                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                          classes={
                                                                                            Object {
                                                                                              "disabled": "Mui-disabled",
                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                              "root": "MuiButtonBase-root",
                                                                                            }
                                                                                          }
                                                                                          component="li"
                                                                                          disabled={false}
                                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                                          onClick={[Function]}
                                                                                          role="menuitem"
                                                                                          tabIndex={-1}
                                                                                        >
                                                                                          <li
                                                                                            aria-disabled={false}
                                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                            onBlur={[Function]}
                                                                                            onClick={[Function]}
                                                                                            onDragLeave={[Function]}
                                                                                            onFocus={[Function]}
                                                                                            onKeyDown={[Function]}
                                                                                            onKeyUp={[Function]}
                                                                                            onMouseDown={[Function]}
                                                                                            onMouseLeave={[Function]}
                                                                                            onMouseUp={[Function]}
                                                                                            onTouchEnd={[Function]}
                                                                                            onTouchMove={[Function]}
                                                                                            onTouchStart={[Function]}
                                                                                            role="menuitem"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <img
                                                                                              alt="DE"
                                                                                              className="language-flag"
                                                                                              key=".0"
                                                                                              src={
                                                                                                Object {
                                                                                                  "ReactComponent": Object {
                                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                                    "render": [Function],
                                                                                                  },
                                                                                                  "__esModule": true,
                                                                                                  "default": "de-flag.svg",
                                                                                                }
                                                                                              }
                                                                                            />
                                                                                            DE
                                                                                            <WithStyles(memo)
                                                                                              center={false}
                                                                                            >
                                                                                              <ForwardRef(TouchRipple)
                                                                                                center={false}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                  }
                                                                                                }
                                                                                              >
                                                                                                <span
                                                                                                  className="MuiTouchRipple-root"
                                                                                                >
                                                                                                  <TransitionGroup
                                                                                                    childFactory={[Function]}
                                                                                                    component={null}
                                                                                                    exit={true}
                                                                                                  />
                                                                                                </span>
                                                                                              </ForwardRef(TouchRipple)>
                                                                                            </WithStyles(memo)>
                                                                                          </li>
                                                                                        </ForwardRef(ButtonBase)>
                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                    </ForwardRef(ListItem)>
                                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                                </ForwardRef(MenuItem)>
                                                                              </WithStyles(ForwardRef(MenuItem))>
                                                                            </ul>
                                                                          </ForwardRef(List)>
                                                                        </WithStyles(ForwardRef(List))>
                                                                      </ForwardRef(MenuList)>
                                                                    </div>
                                                                  </ForwardRef(Paper)>
                                                                </WithStyles(ForwardRef(Paper))>
                                                              </Transition>
                                                            </ForwardRef(Grow)>
                                                            <div
                                                              data-test="sentinelEnd"
                                                              tabIndex={0}
                                                            />
                                                          </TrapFocus>
                                                        </div>
                                                      </Portal>
                                                    </ForwardRef(Portal)>
                                                  </ForwardRef(Modal)>
                                                </ForwardRef(Popover)>
                                              </WithStyles(ForwardRef(Popover))>
                                            </ForwardRef(Menu)>
                                          </WithStyles(ForwardRef(Menu))>
                                        </div>
                                      </div>
                                    </ForwardRef(Toolbar)>
                                  </WithStyles(ForwardRef(Toolbar))>
                                </header>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </ForwardRef(AppBar)>
                        </WithStyles(ForwardRef(AppBar))>
                      </div>
                    </Component>
                  </withRouter()>
                  <div
                    className="main-content"
                    key="1"
                  >
                    <Stepper
                      key="0"
                    >
                      <div
                        className="stepper-container"
                      >
                        <WithStyles(ForwardRef(Stepper))
                          activeStep={0}
                          orientation="vertical"
                        >
                          <ForwardRef(Stepper)
                            activeStep={0}
                            classes={
                              Object {
                                "alternativeLabel": "MuiStepper-alternativeLabel",
                                "horizontal": "MuiStepper-horizontal",
                                "root": "MuiStepper-root",
                                "vertical": "MuiStepper-vertical",
                              }
                            }
                            orientation="vertical"
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiStepper-root MuiStepper-vertical"
                              elevation={0}
                              square={true}
                            >
                              <ForwardRef(Paper)
                                className="MuiStepper-root MuiStepper-vertical"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={0}
                                square={true}
                              >
                                <div
                                  className="MuiPaper-root MuiStepper-root MuiStepper-vertical MuiPaper-elevation0"
                                >
                                  <WithStyles(ForwardRef(Step))
                                    active={true}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={false}
                                    index={0}
                                    key=".$0"
                                    last={false}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={true}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={false}
                                      index={0}
                                      last={false}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={true}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={false}
                                          expanded={false}
                                          icon={1}
                                          key=".0"
                                          last={false}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={true}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={false}
                                            expanded={false}
                                            icon={1}
                                            last={false}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={true}
                                                  completed={false}
                                                  error={false}
                                                  icon={1}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={true}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={1}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root MuiStepIcon-active"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root MuiStepIcon-active"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root MuiStepIcon-active"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            1
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label MuiStepLabel-active"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label MuiStepLabel-active"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiStepLabel-active MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={false}
                                                        key="Name"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={false}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text"
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text"
                                                                disabled={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={0}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Name
                                                                </span>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                  <WithStyles(ForwardRef(StepConnector))
                                    active={false}
                                    completed={false}
                                    disabled={true}
                                    index={1}
                                    key="1"
                                    orientation="vertical"
                                  >
                                    <ForwardRef(StepConnector)
                                      active={false}
                                      classes={
                                        Object {
                                          "active": "MuiStepConnector-active",
                                          "alternativeLabel": "MuiStepConnector-alternativeLabel",
                                          "completed": "MuiStepConnector-completed",
                                          "disabled": "Mui-disabled",
                                          "horizontal": "MuiStepConnector-horizontal",
                                          "line": "MuiStepConnector-line",
                                          "lineHorizontal": "MuiStepConnector-lineHorizontal",
                                          "lineVertical": "MuiStepConnector-lineVertical",
                                          "root": "MuiStepConnector-root",
                                          "vertical": "MuiStepConnector-vertical",
                                        }
                                      }
                                      completed={false}
                                      disabled={true}
                                      index={1}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStepConnector-root MuiStepConnector-vertical Mui-disabled"
                                      >
                                        <span
                                          className="MuiStepConnector-line MuiStepConnector-lineVertical"
                                        />
                                      </div>
                                    </ForwardRef(StepConnector)>
                                  </WithStyles(ForwardRef(StepConnector))>
                                  <WithStyles(ForwardRef(Step))
                                    active={false}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={true}
                                    index={1}
                                    key=".$1"
                                    last={false}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={false}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={true}
                                      index={1}
                                      last={false}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={false}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={true}
                                          expanded={false}
                                          icon={2}
                                          key=".0"
                                          last={false}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={false}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={true}
                                            expanded={false}
                                            icon={2}
                                            last={false}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical Mui-disabled"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={false}
                                                  completed={false}
                                                  error={false}
                                                  icon={2}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={false}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={2}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            2
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={true}
                                                        key="Email"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                            component="button"
                                                            disabled={true}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={true}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text Mui-disabled Mui-disabled"
                                                                disabled={true}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Email
                                                                </span>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                  <WithStyles(ForwardRef(StepConnector))
                                    active={false}
                                    completed={false}
                                    disabled={true}
                                    index={2}
                                    key="2"
                                    orientation="vertical"
                                  >
                                    <ForwardRef(StepConnector)
                                      active={false}
                                      classes={
                                        Object {
                                          "active": "MuiStepConnector-active",
                                          "alternativeLabel": "MuiStepConnector-alternativeLabel",
                                          "completed": "MuiStepConnector-completed",
                                          "disabled": "Mui-disabled",
                                          "horizontal": "MuiStepConnector-horizontal",
                                          "line": "MuiStepConnector-line",
                                          "lineHorizontal": "MuiStepConnector-lineHorizontal",
                                          "lineVertical": "MuiStepConnector-lineVertical",
                                          "root": "MuiStepConnector-root",
                                          "vertical": "MuiStepConnector-vertical",
                                        }
                                      }
                                      completed={false}
                                      disabled={true}
                                      index={2}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStepConnector-root MuiStepConnector-vertical Mui-disabled"
                                      >
                                        <span
                                          className="MuiStepConnector-line MuiStepConnector-lineVertical"
                                        />
                                      </div>
                                    </ForwardRef(StepConnector)>
                                  </WithStyles(ForwardRef(StepConnector))>
                                  <WithStyles(ForwardRef(Step))
                                    active={false}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={true}
                                    index={2}
                                    key=".$2"
                                    last={false}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={false}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={true}
                                      index={2}
                                      last={false}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={false}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={true}
                                          expanded={false}
                                          icon={3}
                                          key=".0"
                                          last={false}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={false}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={true}
                                            expanded={false}
                                            icon={3}
                                            last={false}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical Mui-disabled"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={false}
                                                  completed={false}
                                                  error={false}
                                                  icon={3}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={false}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={3}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            3
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={true}
                                                        key="Phone"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                            component="button"
                                                            disabled={true}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={true}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text Mui-disabled Mui-disabled"
                                                                disabled={true}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Phone
                                                                </span>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                  <WithStyles(ForwardRef(StepConnector))
                                    active={false}
                                    completed={false}
                                    disabled={true}
                                    index={3}
                                    key="3"
                                    orientation="vertical"
                                  >
                                    <ForwardRef(StepConnector)
                                      active={false}
                                      classes={
                                        Object {
                                          "active": "MuiStepConnector-active",
                                          "alternativeLabel": "MuiStepConnector-alternativeLabel",
                                          "completed": "MuiStepConnector-completed",
                                          "disabled": "Mui-disabled",
                                          "horizontal": "MuiStepConnector-horizontal",
                                          "line": "MuiStepConnector-line",
                                          "lineHorizontal": "MuiStepConnector-lineHorizontal",
                                          "lineVertical": "MuiStepConnector-lineVertical",
                                          "root": "MuiStepConnector-root",
                                          "vertical": "MuiStepConnector-vertical",
                                        }
                                      }
                                      completed={false}
                                      disabled={true}
                                      index={3}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStepConnector-root MuiStepConnector-vertical Mui-disabled"
                                      >
                                        <span
                                          className="MuiStepConnector-line MuiStepConnector-lineVertical"
                                        />
                                      </div>
                                    </ForwardRef(StepConnector)>
                                  </WithStyles(ForwardRef(StepConnector))>
                                  <WithStyles(ForwardRef(Step))
                                    active={false}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={true}
                                    index={3}
                                    key=".$3"
                                    last={false}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={false}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={true}
                                      index={3}
                                      last={false}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={false}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={true}
                                          expanded={false}
                                          icon={4}
                                          key=".0"
                                          last={false}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={false}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={true}
                                            expanded={false}
                                            icon={4}
                                            last={false}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical Mui-disabled"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={false}
                                                  completed={false}
                                                  error={false}
                                                  icon={4}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={false}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={4}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            4
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={true}
                                                        key="Salary"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                            component="button"
                                                            disabled={true}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={true}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text Mui-disabled Mui-disabled"
                                                                disabled={true}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Salary
                                                                </span>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                  <WithStyles(ForwardRef(StepConnector))
                                    active={false}
                                    completed={false}
                                    disabled={true}
                                    index={4}
                                    key="4"
                                    orientation="vertical"
                                  >
                                    <ForwardRef(StepConnector)
                                      active={false}
                                      classes={
                                        Object {
                                          "active": "MuiStepConnector-active",
                                          "alternativeLabel": "MuiStepConnector-alternativeLabel",
                                          "completed": "MuiStepConnector-completed",
                                          "disabled": "Mui-disabled",
                                          "horizontal": "MuiStepConnector-horizontal",
                                          "line": "MuiStepConnector-line",
                                          "lineHorizontal": "MuiStepConnector-lineHorizontal",
                                          "lineVertical": "MuiStepConnector-lineVertical",
                                          "root": "MuiStepConnector-root",
                                          "vertical": "MuiStepConnector-vertical",
                                        }
                                      }
                                      completed={false}
                                      disabled={true}
                                      index={4}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStepConnector-root MuiStepConnector-vertical Mui-disabled"
                                      >
                                        <span
                                          className="MuiStepConnector-line MuiStepConnector-lineVertical"
                                        />
                                      </div>
                                    </ForwardRef(StepConnector)>
                                  </WithStyles(ForwardRef(StepConnector))>
                                  <WithStyles(ForwardRef(Step))
                                    active={false}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={true}
                                    index={4}
                                    key=".$4"
                                    last={false}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={false}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={true}
                                      index={4}
                                      last={false}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={false}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={true}
                                          expanded={false}
                                          icon={5}
                                          key=".0"
                                          last={false}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={false}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={true}
                                            expanded={false}
                                            icon={5}
                                            last={false}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical Mui-disabled"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={false}
                                                  completed={false}
                                                  error={false}
                                                  icon={5}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={false}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={5}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            5
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={true}
                                                        key="Review"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                            component="button"
                                                            disabled={true}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={true}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text Mui-disabled Mui-disabled"
                                                                disabled={true}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Review
                                                                </span>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                  <WithStyles(ForwardRef(StepConnector))
                                    active={false}
                                    completed={false}
                                    disabled={true}
                                    index={5}
                                    key="5"
                                    orientation="vertical"
                                  >
                                    <ForwardRef(StepConnector)
                                      active={false}
                                      classes={
                                        Object {
                                          "active": "MuiStepConnector-active",
                                          "alternativeLabel": "MuiStepConnector-alternativeLabel",
                                          "completed": "MuiStepConnector-completed",
                                          "disabled": "Mui-disabled",
                                          "horizontal": "MuiStepConnector-horizontal",
                                          "line": "MuiStepConnector-line",
                                          "lineHorizontal": "MuiStepConnector-lineHorizontal",
                                          "lineVertical": "MuiStepConnector-lineVertical",
                                          "root": "MuiStepConnector-root",
                                          "vertical": "MuiStepConnector-vertical",
                                        }
                                      }
                                      completed={false}
                                      disabled={true}
                                      index={5}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStepConnector-root MuiStepConnector-vertical Mui-disabled"
                                      >
                                        <span
                                          className="MuiStepConnector-line MuiStepConnector-lineVertical"
                                        />
                                      </div>
                                    </ForwardRef(StepConnector)>
                                  </WithStyles(ForwardRef(StepConnector))>
                                  <WithStyles(ForwardRef(Step))
                                    active={false}
                                    alternativeLabel={false}
                                    completed={false}
                                    connector={<ForwardRef(WithStyles) />}
                                    disabled={true}
                                    index={5}
                                    key=".$5"
                                    last={true}
                                    orientation="vertical"
                                  >
                                    <ForwardRef(Step)
                                      active={false}
                                      alternativeLabel={false}
                                      classes={
                                        Object {
                                          "alternativeLabel": "MuiStep-alternativeLabel",
                                          "completed": "MuiStep-completed",
                                          "horizontal": "MuiStep-horizontal",
                                          "root": "MuiStep-root",
                                          "vertical": "MuiStep-vertical",
                                        }
                                      }
                                      completed={false}
                                      connector={<ForwardRef(WithStyles) />}
                                      disabled={true}
                                      index={5}
                                      last={true}
                                      orientation="vertical"
                                    >
                                      <div
                                        className="MuiStep-root MuiStep-vertical"
                                      >
                                        <WithStyles(ForwardRef(StepLabel))
                                          active={false}
                                          alternativeLabel={false}
                                          completed={false}
                                          disabled={true}
                                          expanded={false}
                                          icon={6}
                                          key=".0"
                                          last={true}
                                          orientation="vertical"
                                        >
                                          <ForwardRef(StepLabel)
                                            active={false}
                                            alternativeLabel={false}
                                            classes={
                                              Object {
                                                "active": "MuiStepLabel-active",
                                                "alternativeLabel": "MuiStepLabel-alternativeLabel",
                                                "completed": "MuiStepLabel-completed",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "horizontal": "MuiStepLabel-horizontal",
                                                "iconContainer": "MuiStepLabel-iconContainer",
                                                "label": "MuiStepLabel-label",
                                                "labelContainer": "MuiStepLabel-labelContainer",
                                                "root": "MuiStepLabel-root",
                                                "vertical": "MuiStepLabel-vertical",
                                              }
                                            }
                                            completed={false}
                                            disabled={true}
                                            expanded={false}
                                            icon={6}
                                            last={true}
                                            orientation="vertical"
                                          >
                                            <span
                                              className="MuiStepLabel-root MuiStepLabel-vertical Mui-disabled"
                                            >
                                              <span
                                                className="MuiStepLabel-iconContainer"
                                              >
                                                <WithStyles(ForwardRef(StepIcon))
                                                  active={false}
                                                  completed={false}
                                                  error={false}
                                                  icon={6}
                                                >
                                                  <ForwardRef(StepIcon)
                                                    active={false}
                                                    classes={
                                                      Object {
                                                        "active": "MuiStepIcon-active",
                                                        "completed": "MuiStepIcon-completed",
                                                        "error": "Mui-error",
                                                        "root": "MuiStepIcon-root",
                                                        "text": "MuiStepIcon-text",
                                                      }
                                                    }
                                                    completed={false}
                                                    error={false}
                                                    icon={6}
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiStepIcon-root"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiStepIcon-root"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root MuiStepIcon-root"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <circle
                                                            cx="12"
                                                            cy="12"
                                                            r="12"
                                                          />
                                                          <text
                                                            className="MuiStepIcon-text"
                                                            textAnchor="middle"
                                                            x="12"
                                                            y="16"
                                                          >
                                                            6
                                                          </text>
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(StepIcon)>
                                                </WithStyles(ForwardRef(StepIcon))>
                                              </span>
                                              <span
                                                className="MuiStepLabel-labelContainer"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiStepLabel-label"
                                                  component="span"
                                                  display="block"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiStepLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                    display="block"
                                                    variant="body2"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiStepLabel-label MuiTypography-body2 MuiTypography-displayBlock"
                                                    >
                                                       
                                                      <WithStyles(ForwardRef(Button))
                                                        aria-haspopup="true"
                                                        className="default-text"
                                                        disabled={true}
                                                        key="Done"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(Button)
                                                          aria-haspopup="true"
                                                          className="default-text"
                                                          classes={
                                                            Object {
                                                              "colorInherit": "MuiButton-colorInherit",
                                                              "contained": "MuiButton-contained",
                                                              "containedPrimary": "MuiButton-containedPrimary",
                                                              "containedSecondary": "MuiButton-containedSecondary",
                                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                              "disableElevation": "MuiButton-disableElevation",
                                                              "disabled": "Mui-disabled",
                                                              "endIcon": "MuiButton-endIcon",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "fullWidth": "MuiButton-fullWidth",
                                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                              "label": "MuiButton-label",
                                                              "outlined": "MuiButton-outlined",
                                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                              "root": "MuiButton-root",
                                                              "sizeLarge": "MuiButton-sizeLarge",
                                                              "sizeSmall": "MuiButton-sizeSmall",
                                                              "startIcon": "MuiButton-startIcon",
                                                              "text": "MuiButton-text",
                                                              "textPrimary": "MuiButton-textPrimary",
                                                              "textSecondary": "MuiButton-textSecondary",
                                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                                            }
                                                          }
                                                          disabled={true}
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(ButtonBase))
                                                            aria-haspopup="true"
                                                            className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                            component="button"
                                                            disabled={true}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <ForwardRef(ButtonBase)
                                                              aria-haspopup="true"
                                                              className="MuiButton-root MuiButton-text default-text Mui-disabled"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "root": "MuiButtonBase-root",
                                                                }
                                                              }
                                                              component="button"
                                                              disabled={true}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <button
                                                                aria-haspopup="true"
                                                                className="MuiButtonBase-root MuiButton-root MuiButton-text default-text Mui-disabled Mui-disabled"
                                                                disabled={true}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                tabIndex={-1}
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="MuiButton-label"
                                                                >
                                                                  Done
                                                                </span>
                                                              </button>
                                                            </ForwardRef(ButtonBase)>
                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                        </ForwardRef(Button)>
                                                      </WithStyles(ForwardRef(Button))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </span>
                                            </span>
                                          </ForwardRef(StepLabel)>
                                        </WithStyles(ForwardRef(StepLabel))>
                                      </div>
                                    </ForwardRef(Step)>
                                  </WithStyles(ForwardRef(Step))>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </ForwardRef(Stepper)>
                        </WithStyles(ForwardRef(Stepper))>
                      </div>
                    </Stepper>
                    <Switch
                      key="1"
                    >
                      <Route
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                        key="1"
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        path="/"
                        render={[Function]}
                      >
                        <Form
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                        >
                          <div
                            className="form-container"
                          >
                            <form>
                              <Name>
                                <fieldset
                                  className="form-fieldset"
                                >
                                  <legend
                                    className="form-legend"
                                  >
                                    Enter your name
                                  </legend>
                                  <div
                                    className="form-text-input-block"
                                  >
                                    <TextInput
                                      id="first-name"
                                      pattern={/\\^\\[a-zA-Z\\]\\+\\$/}
                                      placeholder="First Name"
                                      type="text"
                                    >
                                      <div>
                                        <input
                                          className="form-input"
                                          id="first-name"
                                          onChange={[Function]}
                                          placeholder="First Name"
                                          type="text"
                                          value=""
                                        />
                                        <label
                                          className="form-label"
                                          htmlFor="first-name"
                                        >
                                          First Name
                                        </label>
                                      </div>
                                    </TextInput>
                                    <TextInput
                                      id="last-name"
                                      pattern={/\\^\\[a-zA-Z\\]\\+\\$/}
                                      placeholder="Last Name"
                                      type="text"
                                    >
                                      <div>
                                        <input
                                          className="form-input"
                                          id="last-name"
                                          onChange={[Function]}
                                          placeholder="Last Name"
                                          type="text"
                                          value=""
                                        />
                                        <label
                                          className="form-label"
                                          htmlFor="last-name"
                                        >
                                          Last Name
                                        </label>
                                      </div>
                                    </TextInput>
                                  </div>
                                  <Navigation
                                    field="name"
                                    next={1}
                                  >
                                    <div
                                      className="form-button-container"
                                    >
                                      <WithStyles(ForwardRef(Button))
                                        className="form-button-next"
                                        color="primary"
                                        disabled={true}
                                        onClick={[Function]}
                                        variant="contained"
                                      >
                                        <ForwardRef(Button)
                                          className="form-button-next"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiButton-colorInherit",
                                              "contained": "MuiButton-contained",
                                              "containedPrimary": "MuiButton-containedPrimary",
                                              "containedSecondary": "MuiButton-containedSecondary",
                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                              "disableElevation": "MuiButton-disableElevation",
                                              "disabled": "Mui-disabled",
                                              "endIcon": "MuiButton-endIcon",
                                              "focusVisible": "Mui-focusVisible",
                                              "fullWidth": "MuiButton-fullWidth",
                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                              "label": "MuiButton-label",
                                              "outlined": "MuiButton-outlined",
                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                              "root": "MuiButton-root",
                                              "sizeLarge": "MuiButton-sizeLarge",
                                              "sizeSmall": "MuiButton-sizeSmall",
                                              "startIcon": "MuiButton-startIcon",
                                              "text": "MuiButton-text",
                                              "textPrimary": "MuiButton-textPrimary",
                                              "textSecondary": "MuiButton-textSecondary",
                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                            }
                                          }
                                          color="primary"
                                          disabled={true}
                                          onClick={[Function]}
                                          variant="contained"
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiButton-root MuiButton-contained form-button-next MuiButton-containedPrimary Mui-disabled"
                                            component="button"
                                            disabled={true}
                                            focusRipple={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiButton-root MuiButton-contained form-button-next MuiButton-containedPrimary Mui-disabled"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="button"
                                              disabled={true}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiButton-root MuiButton-contained form-button-next MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                                disabled={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={-1}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiButton-label"
                                                >
                                                  next
                                                </span>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(Button)>
                                      </WithStyles(ForwardRef(Button))>
                                    </div>
                                  </Navigation>
                                </fieldset>
                              </Name>
                            </form>
                          </div>
                        </Form>
                      </Route>
                    </Switch>
                  </div>
                </div>
              </Trans>
            </ThemeProvider>
          </Suspense>
        </App>
      </Router>
    </MemoryRouter>
  </Suspense>
</Provider>
`;
